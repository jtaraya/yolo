

# Define all services
services:
  # MongoDB Database Service
  database:
    image: mongo:5.0
    container_name: yolo-database
    restart: unless-stopped
    
    # Environment variables for MongoDB
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: securepassword123
      MONGO_INITDB_DATABASE: yolo_db
    
    # Port mapping
    ports:
      - "27017:27017"
    
    # Persistent volume for data
    volumes:
      - mongodb-data:/data/db
    
    # Custom network
    networks:
      - yolo-network
    
    # Health check
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    
    container_name: yolo-backend
    restart: unless-stopped
    
    # Port mapping
    ports:
      - "5000:5000"
    
    # Environment variables
    environment:
      MONGO_URI: mongodb://admin:securepassword123@database:27017/yolo_db?authSource=admin
      PORT: 5000
      NODE_ENV: production
    
    # Depends on database
    depends_on:
      database:
        condition: service_healthy
    
    # Custom network
    networks:
      - yolo-network
    
    # Health check
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    
    container_name: yolo-frontend
    restart: unless-stopped
    
    # Port mapping
    ports:
      - "3000:3000"
    
    # Environment variables
    environment:
      REACT_APP_API_URL: http://localhost:5000
      NODE_ENV: production
    
    # Depends on backend
    depends_on:
      backend:
        condition: service_healthy
    
    # Custom network
    networks:
      - yolo-network
    
    # Health check
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Custom bridge network
networks:
  yolo-network:
    driver: bridge
    name: yolo-network

# Named volume for database persistence
volumes:
  mongodb-data:
    driver: local
    name: yolo-mongodb-data
